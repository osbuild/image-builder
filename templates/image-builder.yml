---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: image-builder
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: ${CLOWDAPP_NAME}
  spec:
    envName: ${ENV_NAME}
    testing:
      iqePlugin: image-builder
    deployments:
    - name: service
      replicas: ${{REPLICAS}}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: ${LIVENESS_URI}
            port: 8000
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: ${READINESS_URI}
            port: 8000
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        env:
          - name: LISTEN_ADDRESS
            value: ${LISTEN_ADDRESS}
          - name: LOG_LEVEL
            value: ${LOG_LEVEL}
          - name: COMPOSER_TOKEN_URL
            value: "${COMPOSER_TOKEN_URL}"
          - name: DISTRIBUTIONS_DIR
            value: '/app/distributions'
          - name: QUOTA_FILE
            value: "${QUOTA_FILE}"
          - name: ALLOW_FILE
            value: "${ALLOW_FILE}"
          - name: FEDORA_AUTH
            value: "${FEDORA_AUTH}"
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
          - name: OSBUILD_AWS_REGION
            value: "${OSBUILD_AWS_REGION}"
          - name: OSBUILD_GCP_REGION
            value: "${OSBUILD_GCP_REGION}"
          - name: OSBUILD_GCP_BUCKET
            value: "${OSBUILD_GCP_BUCKET}"
          - name: PGSSLMODE
            value: "${PGSSLMODE}"
          - name: CONTENT_SOURCES_REPO_URL
            value: "${CONTENT_SOURCES_REPO_URL}"
          # Configuration for the osbuild client within image-builder
          - name: COMPOSER_URL
            value: "${COMPOSER_URL}"
          - name: COMPOSER_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: client_id
                name: composer-secrets
          - name: COMPOSER_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: client_secret
                name: composer-secrets
          # Splunk forwarding
          - name: SPLUNK_HEC_TOKEN
            valueFrom:
              secretKeyRef:
                name: splunk
                key: token
                optional: true
          - name: SPLUNK_HEC_HOST
            valueFrom:
              secretKeyRef:
                name: splunk
                key: url
                optional: true
          - name: SPLUNK_HEC_PORT
            value: "${SPLUNK_HEC_PORT}"
          - name: GLITCHTIP_DSN
            valueFrom:
              secretKeyRef:
                key: dsn
                name: "${GLITCHTIP_DSN_NAME}"
                optional: true
          - name: RECOMMENDATIONS_URL
            value: "${RECOMMENDATIONS_URL}"
            optional: true
          - name: RECOMMENDATIONS_TOKEN_URL
            value: "${RECOMMENDATIONS_TOKEN_URL}"
            optional: true
          - name: RECOMMENDATIONS_CA_PATH
            value: "${RECOMMENDATIONS_CA_PATH}"
            optional: true
          - name: RECOMMENDATIONS_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: client_id
                name: recommendations-secrets
                optional: true
          - name: RECOMMENDATIONS_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: client_secret
                name: recommendations-secrets
                optional: true
          - name: RECOMMENDATIONS_PROXY
            valueFrom:
              secretKeyRef:
                key: proxy
                name: recommendations-secrets
                optional: true
          - name: CHANNEL
            value: ${CHANNEL}
        volumeMounts:
          - name: config-volume
            mountPath: /app/config
        volumes:
          - name: config-volume
            configMap:
              name: image-builder-crc-config-files
              optional: true
              items:
              - key: quotas.json
                path: quotas.json
              - key: allow_list.json
                path: allow_list.json
        initContainers:
        - name: image-builder-migrate
          image: ${IMAGE}:${IMAGE_TAG}
          command: [ "/app/image-builder-migrate-db-tern" ]
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
      webServices:
        public:
          enabled: true
          apiPath: image-builder

    database:
      name: image-builder
      version: 12

    optionalDependencies:
    - provisioning-backend
    - content-sources-backend
    - compliance

- apiVersion: metrics.console.redhat.com/v1alpha1
  kind: FloorPlan
  metadata:
    name: image-builder
    service: image-builder
  spec:
    database:
      secretName: ${FLOORIST_DB_SECRET_NAME}
    objectStore:
      secretName: ${FLOORIST_BUCKET_SECRET_NAME}
    logLevel: ${FLOORIST_LOGLEVEL}
    suspend: ${{FLOORIST_SUSPEND}}
    queries:
    - prefix: ${FLOORIST_QUERY_PREFIX}/builds
      query: >-
        select
          c.job_id,c.created_at,c.client_id,c.org_id,c.account_number,c.email,c.request->>'distribution' as distribution,
          req->>'architecture' as architecture,req->>'image_type' as image_type,req->'upload_request'->>'type' as upload_request_type,req->'ostree'->>'url' as ostree_url,
          req->>'snapshot_date' as snapshot_date,
          v.blueprint_id::text as blueprint_id,
          v.version as blueprint_version,
          b.deleted as blueprint_deleted,
          c.request->'customizations'->'subscription' as subscription,
          c.request->'customizations'->'packages' as packages,
          c.request->'customizations'->'filesystem' as filesystem,
          c.request->'customizations'->'payload_repositories' as payload_repositories,
          c.request->'customizations'->'openscap' as openscap,
          c.request->'customizations'->'files' as files,
          c.request->'customizations'->'services' as services,
          jsonb_array_length(c.request->'customizations'->'users') as num_users
        from
          composes c
          left outer join blueprint_versions v on c.blueprint_version_id = v.id
          left outer join blueprints b ON v.blueprint_id = b.id
          cross join lateral jsonb_array_elements(c.request->'image_requests') as req;
    - prefix: ${FLOORIST_QUERY_PREFIX}/blueprints
      query: >-
        select
          v.blueprint_id::text as blueprint_id, v.version, b.deleted,
          b.metadata->>'exported_at' as exported_at,
          b.metadata->>'parent_id' as parent_id
        from
          blueprint_versions v
          left outer join blueprints b ON v.blueprint_id = b.id

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: image-builder
    name: image-builder
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/scrape: 'true'
  spec:
    ports:
      - name: image-builder
        protocol: TCP
        port: 8080
        targetPort: 8000
    selector:
      pod: image-builder-service

parameters:
  - name: IMAGE
    value: quay.io/cloudservices/image-builder
    required: true
  - name: IMAGE_TAG
    required: true
  - name: LIVENESS_URI
    value: "/status"
  - name: READINESS_URI
    value: "/ready"
  - name: LISTEN_ADDRESS
    value: "0.0.0.0:8000"
  - description: Determines Clowder deployment
    name: CLOWDER_ENABLED
    value: "true"
  - description: ClowdEnv Name
    name: ENV_NAME
  - name: COMPOSER_URL
    value: "https://api.stage.openshift.com"
  - name: COMPOSER_TOKEN_URL
    value: "https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token"
  - name: CPU_REQUEST
    description: CPU request per container
    value: 200m
  - name: CPU_LIMIT
    description: CPU limit per container
    value: 1000m
  - name: MEMORY_REQUEST
    description: Memory request per container
    value: 256Mi
  - name: MEMORY_LIMIT
    description: Memory limit per container
    value: 512Mi
  - name: OSBUILD_AWS_REGION
    description: default region which is used for s3 and ec2 images
    value: "us-east-1"
  - name: REPLICAS
    description: pod replicas
    value: "3"
  - name: FLOORIST_LOGLEVEL
    description: Floorist loglevel config
    value: 'INFO'
  - name: FLOORIST_SUSPEND
    description: Disable Floorist cronjob execution
    value: 'false'
  - name: FLOORIST_DB_SECRET_NAME
    description: Name of the secret for accessing the database for floorist
    value: "image-builder-db"
  - name: FLOORIST_BUCKET_SECRET_NAME
    description: Name of the secret for accessing the bucket for the floorist data dump
    value: "floorist-bucket"
  - name: FLOORIST_QUERY_PREFIX
    description: Prefix for separating query data between prod and stage in the bucket
    value: "image-builder"
  - description: fluentd-hec splunk port
    name: SPLUNK_HEC_PORT
    value: "443"
  - name: OSBUILD_GCP_REGION
    description: Region in GCP to upload to
    value: "us-east4"
  - name: OSBUILD_GCP_BUCKET
    description: Bucket in GCP to upload to
    value: "image-upload-bkt-us"
  - name: PGSSLMODE
    description: Sslmode for the connection to psql
    value: "prefer"
  - name: QUOTA_FILE
    value: ""
  - name: ALLOW_FILE
    value: ""
  - name: CLOWDAPP_NAME
    value: image-builder
  - name: GLITCHTIP_DSN_NAME
    value: "image-builder-stage-dsn"
    description: Name of the secret for connecting to sentry/glitchtip
  - name: FEDORA_AUTH
    value: "false"
    description: Look for the fedora auth header instead of the RH one
  - name: LOG_LEVEL
    value: "INFO"
    description: Main application log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
  - name: CONTENT_SOURCES_REPO_URL
    value: ""
    description: URL where content sources hosts its repositories
  - name: RECOMMENDATIONS_URL
    value: "https://rhel-image-builder-api/rhel-image-builder"
  - name: RECOMMENDATIONS_TOKEN_URL
    value: "https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token"
  - name: RECOMMENDATIONS_CA_PATH
    value: ""
  - name: CHANNEL
    value: "local"
    description: >
      Channel where this pod is deployed.
      This is appended to the logs. Usually something like
      "local", "staging" or "production".


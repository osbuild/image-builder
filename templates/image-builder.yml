apiVersion: v1
kind: Template
labels:
  app: image-builder
  template: image-builder
metadata:
  annotations:
    description: Backend service for image-builder in cloud.redhat.com
  name: image-builder
objects:

# NOTE(mhayden): This came from the example in the documentation and I felt
# like it would be useful to maintain it here so it's easier to add our own
# variables later.
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: image-builder
    name: image-builder-config
  data:
    example: "${EXAMPLE}"

# Deploy the image-builder container.
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      service: image-builder
    name: image-builder
  spec:
    replicas: 2
    selector:
      matchLabels:
        name: image-builder
    template:
      metadata:
        labels:
          name: image-builder
      spec:
        containers:
        - image: "${IMAGE_NAME}:${IMAGE_TAG}"
          name: image-builder
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: ${HEALTHCHECK_URI}
              port: 8086
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: ${HEALTHCHECK_URI}
              port: 8086
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
          - name: api
            containerPort: 8086
            protocol: TCP
          volumeMounts:
            - name: composer-secrets
              mountPath: "/app/composer-secrets"
              readOnly: true
          env:
            - name: LISTEN_ADDRESS
              value: "${LISTEN_ADDRESS}"
            # Credentials/configuration for AWS RDS.
            # TODO uncomment this when needed for the DB work
            # - name: PGHOST
            #   valueFrom:
            #     secretKeyRef:
            #       name: image-builder-db
            #       key: db.host
            # - name: PGPORT
            #   valueFrom:
            #     secretKeyRef:
            #       name: image-builder-db
            #       key: db.port
            # - name: PGDATABASE
            #   valueFrom:
            #     secretKeyRef:
            #       name: image-builder-db
            #       key: db.name
            # - name: PGUSER
            #   valueFrom:
            #     secretKeyRef:
            #       name: image-builder-db
            #       key: db.user
            # - name: PGPASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: image-builder-db
            #       key: db.password
            # Configuration for the osbuild client within image-builder
            - name: OSBUILD_URL
              value: "${OSBUILD_URL}"
            - name: OSBUILD_CERT_PATH
              value: "${OSBUILD_CERT_PATH}"
            - name: OSBUILD_KEY_PATH
              value: "${OSBUILD_KEY_PATH}"
            - name: OSBUILD_CA_PATH
              value: "${OSBUILD_CA_PATH}"
            # Credentials/configuration for AWS cloudwatch.
            - name: CW_AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: aws_access_key_id
                  name: image-builder-cloudwatch
            - name: CW_AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: aws_secret_access_key
                  name: image-builder-cloudwatch
            - name: CW_LOG_GROUP
              valueFrom:
                secretKeyRef:
                  key: log_group_name
                  name: image-builder-cloudwatch
            - name: CW_AWS_REGION
              valueFrom:
                secretKeyRef:
                  key: aws_region
                  name: image-builder-cloudwatch
            # Secrets used to tell osbuild-composer where to upload images.
            - name: OSBUILD_AWS_REGION
              valueFrom:
                secretKeyRef:
                  key: aws_region
                  name: composer-secrets
            - name: OSBUILD_AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: aws_access_key_id
                  name: composer-secrets
            - name: OSBUILD_AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: aws_secret_access_key
                  name: composer-secrets
            - name: OSBUILD_AWS_S3_BUCKET
              valueFrom:
                secretKeyRef:
                  key: aws_s3_bucket
                  name: composer-secrets
            - name: ALLOWED_ORG_IDS
              value: "${ALLOWED_ORG_IDS}"
        volumes:
          - name: composer-secrets
            secret:
              secretName: composer-secrets

# Set up a service within the namespace for the backend.
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: image-builder
    name: image-builder
  spec:
    ports:
      - name: image-builder
        protocol: TCP
        port: ${{BACKEND_LISTENER_PORT}}
        targetPort: 8086
    selector:
      name: image-builder

# Parameters for the various configurations shown above.
parameters:
  - description: Example configmap variable
    name: EXAMPLE
    value: "EXAMPLE_DATA"
  - description: image-builder image name
    name: IMAGE_NAME
    value: quay.io/cloudservices/image-builder
    required: true
  - description: image-builder image tag
    name: IMAGE_TAG
    required: true
  # NOTE(mhayden): This is set to match the ports set up in RHIOPS-953.
  - description: Backend listener port
    name: BACKEND_LISTENER_PORT
    value: "8080"
  # NOTE(mhayden): Change this later once we add a real health check to
  # image-builder that verifies connectivity, etc.
  - name: HEALTHCHECK_URI
    description: URI to query for the health check
    value: "/status"
  - name: LISTEN_ADDRESS
    description: Listening address and port
    value: "0.0.0.0:8086"
  - name: OSBUILD_CERT_PATH
    description: Path to certificate for ssl client auth to osbuild-composer instance
    value: "/app/composer-secrets/client-crt.pem"
  - name: OSBUILD_KEY_PATH
    description: Path to key for ssl client auth to osbuild-composer instance
    value: "/app/composer-secrets/client-key.pem"
  - name: OSBUILD_CA_PATH
    description: Path to ca for ssl client auth to osbuild-composer instance
    value: "/app/composer-secrets/ca-crt.pem"
  - name: OSBUILD_URL
    description: Url to osbuild-composer instance in AWS
    value: "https://external.staging.composer.osbuild.org:9876/api/composer/v1"
  - name: ALLOWED_ORG_IDS
    description: Organization ids allowed to access the api, wildcard means everyone
    value: ""

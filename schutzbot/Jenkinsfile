pipeline {
    agent none

    options {
        timestamps()
        ansiColor('xterm')
        // Cancel the pipeline if it runs for more than 30 minutes.
        timeout(
            time: 30,
            unit: "MINUTES"
        )
    }

    stages {
        stage("Prepare ðŸ¤”") {
            agent { label "schutzbot" }
            options {
                // Don't checkout the git repository here. It just clogs
                // up the Jenkins disk space and does nothing for us.
                skipDefaultCheckout()
            }
            steps {
                sh (
                    label: "Get environment variables",
                    script: "env | sort"
                )
            }
        }

        stage("Test âœ…") {
            parallel {
                stage('F33') {
                    agent { label "f33cloudbase && x86_64 && aws" }
                    steps {
                        run_project_tests('image-builder', 'api.sh')
                    }
                }
                stage('EL8') {
                    agent { label "rhel8cloudbase && x86_64 && aws" }
                    environment {
                        RHN_REGISTRATION_SCRIPT = credentials('rhn-register-script-production')
                    }
                    steps {
                        run_project_tests('image-builder', 'api.sh')
                    }
                }
            }
        }
    }
}

// Similar to run_tests, but with a more general signature: allows setting the
// project whose -tests package to install, and the name of the test to execute
void run_project_tests(project, test) {
    sh "schutzbot/ci_details.sh"
    sh "schutzbot/build.sh"
    sh "schutzbot/provision-composer.sh"
    sh "/usr/libexec/tests/${project}/${test}"
}

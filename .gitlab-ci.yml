stages:
  - start
  - build
  - test
  - finish

.terraform:
  after_script:
    - schutzbot/update_github_status.sh update
    - schutzbot/save_journal.sh
  tags:
    - terraform
  artifacts:
    paths:
      - journal-log.gpg
    when: always


start:
  stage: start
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh start

build:
  stage: build
  extends: .terraform
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
  script:
    - schutzbot/build.sh
  artifacts:
    paths:
      - repo/image-builder/${CI_PIPELINE_ID}
    expire_in: 3 days
  parallel:
    matrix:
      - RUNNER:
          - aws/rhel-8.4-ga-x86_64

Test EL8:
  stage: test
  extends: .terraform
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
  script:
    - schutzbot/ci_details.sh
    - schutzbot/deploy.sh
    - test/cases/api.sh ${PROVIDER}
  parallel:
    matrix:
      - PROVIDER:
          - aws
          - azure
          - gcp
        RUNNER:
          - aws/rhel-8.4-ga-x86_64

Test Edge EL8:
  stage: test
  extends: .terraform
  tags:
    - terraform/openstack
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
  script:
    - schutzbot/ci_details.sh
    - schutzbot/deploy.sh
    - test/cases/edge.sh
  parallel:
    matrix:
      - RUNNER:
          - openstack/rhel-8.4-ga-x86_64

Test Load Test:
  stage: test
  extends: .terraform
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  script:
    - schutzbot/ci_details.sh
    - test/cases/load_test.sh
  parallel:
    matrix:
      - RUNNER:
          - aws/rhel-8.4-ga-x86_64
        INTERNAL_NETWORK: ["true"]

finish:
  stage: finish
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh finish

# Use a builder container to build the Go application (which we extract in
# the second container).
FROM registry.access.redhat.com/ubi9/go-toolset:latest AS builder
WORKDIR $GOPATH/go/src/github.com/osbuild/image-builder
# ubi9/go-toolset defaults to uid 1001. Let's copy the files with this UID as well.
# Otherwise, VCS stamping will fail because git >= 2.35.2 refuses to work in
# a repository owned by a different user.
COPY --chown=1001 . .
ENV GOFLAGS=-mod=vendor

ARG GOPROXY=https://proxy.golang.org,direct
RUN go env -w GOPROXY=$GOPROXY

ARG GOMODARGS=""
ARG GCFLAGS=""

RUN go install $GOMODARGS $GCFLAGS ./...

FROM registry.access.redhat.com/ubi9/go-toolset:latest AS builder2
RUN go install github.com/jackc/tern@latest

# Build an extremely minimal container that only contains our Go application.
FROM registry.access.redhat.com/ubi9/ubi-minimal:latest
RUN mkdir /app
RUN mkdir -p "/opt/migrate/"

COPY --from=builder /opt/app-root/src/go/bin/image-builder /app/
COPY --from=builder /opt/app-root/src/go/bin/image-builder-migrate-db-tern /app/
COPY ./distributions /app/distributions
COPY ./internal/db/migrations-tern /app/migrations
COPY ./distribution/openshift-startup.sh /opt/openshift-startup.sh
COPY --from=builder2 /opt/app-root/src/go/bin/tern /opt/migrate/
COPY --from=builder2 /usr/bin/dlv /usr/bin/dlv
COPY --from=builder2 /usr/share/licenses/delve /usr/share/licenses/delve
ENV TERN_MIGRATIONS_DIR=/app/migrations
EXPOSE 8086
CMD ["/opt/openshift-startup.sh"]
